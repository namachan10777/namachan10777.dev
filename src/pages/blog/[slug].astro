---
import Breadcrumbs from "@components/display/breadcrumbs.astro";
import ResponsiveWidth from "@components/layout/responsive-width.astro";
import Base from "@layouts/base.astro";
import type { GetStaticPaths } from "astro";
import { getCollection, getEntry } from "astro:content";

export const getStaticPaths = (async () => {
  const blogs = await getCollection("blog");
  return blogs.map((blog) => ({ params: { slug: blog.slug } }));
}) satisfies GetStaticPaths;

const article = await getEntry("blog", Astro.params.slug);
const { Content } = await article.render();
---

<Base
  title={`/blog/${Astro.params.slug}`}
  description={article.data.description}
>
  <ResponsiveWidth>
    <Breadcrumbs path={["blog", Astro.params.slug]} />
    <h1>{article.data.title}</h1>
    <nav class="tags">
      {
        article.data.category.map((cat) => (
          <a href={`/category/${cat}`}>#{cat}</a>
        ))
      }
    </nav>
    <main class="md-root">
      <Content />
    </main>
  </ResponsiveWidth>
</Base>
<style>
  .tags {
    margin-bottom: 1rem;
    text-decoration: underline;
    text-decoration-style: dashed;
    font-family: var(--mono-family);
    font-weight: bold;
    text-underline-offset: 3px;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(6rem, max-content));
    gap: 1rem;
  }

  h1 {
    margin-top: 2rem;
    margin-bottom: 2rem;
    color: var(--color-text-strong);
    font-size: var(--font-size-3xl);
    font-weight: bold;
  }
</style>

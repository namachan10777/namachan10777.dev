---
import ArticleHeading from "@components/composite/heading/blog.astro";
import Breadcrumbs from "@components/display/breadcrumbs.astro";
import ResponsiveWidth from "@components/layout/responsive-width.astro";
import Base from "@layouts/base.astro";
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
export const getStaticPaths = (async () => {
  const blogs = await getCollection("blog");
  const categories = [
    ...new Set(blogs.flatMap((blog) => blog.data.category)).values(),
  ];
  return categories.map((category) => ({
    params: {
      category,
    },
  }));
}) satisfies GetStaticPaths;

const blogs = (
  await getCollection("blog", (blog) =>
    blog.data.category.includes(Astro.params.category),
  )
)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
  .filter((blog) => blog.data.publish);
---

<Base
  title={`/category/${Astro.params.category}`}
  description={`カテゴリー${Astro.params.category}に属すブログ記事の一覧`}
>
  <ResponsiveWidth>
    <Breadcrumbs path={["category", Astro.params.category]} />
    <ul>
      {
        blogs.map((blog) => (
          <li>
            <ArticleHeading
              bodyMarkdown={blog.body}
              title={blog.data.title}
              href={`/blog/${blog.slug}`}
              date={blog.data.date}
            />
          </li>
        ))
      }
    </ul>
  </ResponsiveWidth>
</Base>

<style>
  li {
    margin-top: 2rem;
    margin-bottom: 2rem;
    display: flex;
    flex-direction: column;
    align-items: start;
  }
</style>

---
import type { GetStaticPaths } from "astro";
import Base from "@layouts/Base.astro";
import { getCollection } from "astro:content";
import Anchor from "@components/mdx/anchor.astro";
import PostPreview from "@components/composite/post-preview.astro";
import { PAGE_SIZE } from "@lib/util";
import Tags from "@components/composite/tags.astro";
import PostPreviewList from "@components/composite/post-preview-list.astro";

export const getStaticPaths = (async ({ paginate }) => {
  const posts = await getCollection("post");
  return paginate(
    posts.sort((a, b) => b.data.date.getDate() - a.data.date.getDate()),
    { pageSize: PAGE_SIZE },
  );
}) satisfies GetStaticPaths;

const tags = [
  ...new Set((await getCollection("post")).flatMap((post) => post.data.tags)),
];

const { page } = Astro.props;
---

<Base
  title={`posts (${page.currentPage})`}
  description={`posts page ${page.currentPage} of ${page.lastPage}`}
  imagePath={`${page.url.current}.webp`}
  og={{ type: "website" }}
  path={[
    { display: { name: "profile", icon: "iconoir:home" }, absolute: "/" },
    { display: "post", absolute: `/post/page/1` },
  ].concat(
    page.currentPage == 1
      ? [
          {
            display: `page ${page.currentPage}`,
            absolute: `/post/page/${page.currentPage}`,
          },
        ]
      : [],
  )}
>
  <div class="tags-container">
    <Tags tags={tags} />
  </div>
  <PostPreviewList posts={page.data} />
  <nav class="page-nav">
    {
      page.url.prev && (
        <div class=" col-start-1">
          <Anchor href={page.url.prev}>prev</Anchor>
        </div>
      )
    }
    <div class="current">
      {page.currentPage} / {page.lastPage}
    </div>
    {
      page.url.next && (
        <div class="next">
          <Anchor href={page.url.next}>next â†’</Anchor>
        </div>
      )
    }
  </nav>
</Base>

<style>
  .page-nav {
    display: grid;
    grid-column: 1fr 1fr 1fr;
    margin-block: 1rem;
    color: var(--fg-weak);
  }
  .prev {
    grid-column-start: 1;
    justify-content: start;
  }

  .current {
    grid-column-start: 2;
    justify-content: center;
  }

  .next {
    grid-column-start: 3;
    justify-content: end;
  }

  .tags-container {
    margin-block: 1rem;
  }
</style>

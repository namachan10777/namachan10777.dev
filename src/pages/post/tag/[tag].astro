---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Base from "@layouts/Base.astro";
import Heading1 from "@components/mdx/heading1.astro";
import PostPreviewList from "@components/composite/post-preview-list.astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection("post");
  const tags = new Set(posts.flatMap((post) => post.data.tags));
  return [...tags].map((tag) => ({
    params: {
      tag,
    },
  }));
}) satisfies GetStaticPaths;

const posts = (
  await getCollection("post", (post) =>
    post.data.tags.includes(Astro.params.tag),
  )
).sort((a, b) => a.data.date.getDate() - b.data.date.getDate());
---

<Base
  title={`posts of #${Astro.params.tag}`}
  description={`posts in #${Astro.params.tag}`}
  imagePath={`post/tag/${Astro.params.tag}`}
  og={{ type: "website" }}
  path={[
    { display: { name: "profile", icon: "iconoir:home" }, absolute: "/" },
    { display: "post", absolute: "/post/page/1" },
    {
      display: `#${Astro.params.tag}`,
      absolute: `/post/tag/${Astro.params.tag}`,
    },
  ]}
>
  <Heading1>
    {Astro.params.tag}
  </Heading1>
  <PostPreviewList posts={posts} />
</Base>

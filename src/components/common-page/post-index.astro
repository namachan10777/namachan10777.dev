---
import { PAGE_SIZE } from "@lib/constant";
import { paginated } from "@lib/collection-helper";
import { getCollection } from "astro:content";
import PostPreview from "@components/post-preview.astro";
import Anchor from "@components/mdx/anchor.astro";

export type Props = {
  index: number;
};

const index = Astro.props.index;
const pages = await paginated("post", PAGE_SIZE);
const posts = pages[Astro.props.index]!.sort(
  (a, b) => b.data.date.getDate() - a.data.date.getDate(),
);

const tags = [
  ...new Set((await getCollection("post")).flatMap((post) => post.data.tags)),
];
---

<ul class="flex flex-wrap gap-4 py-2">
  {
    tags.map((tag) => (
      <li>
        <a
          class="underline font-mono font-semibold text-blue-700"
          href={`/post/tag/${tag}`}
        >
          #{tag}
        </a>
      </li>
    ))
  }
</ul>
<ol class="py-2 flex flex-col gap-6">
  {
    posts.map((post) => (
      <li>
        <PostPreview post={post} />
      </li>
    ))
  }
</ol>

<hr class="my-4" />
<nav>
  <div class="grid grid-cols-3">
    {
      index == 1 && (
        <div class=" col-start-1">
          <Anchor href="/post">←prev</Anchor>
        </div>
      )
    }
    {
      index > 1 && (
        <div class="col-start-1">
          <Anchor href={`/post/page/${index}`}>←prev</Anchor>
        </div>
      )
    }
    <div class="col-start-2 text-center">
      {`${index} of ${pages.length}`}
    </div>
    {
      index < pages.length - 1 && (
        <div class=" col-start-3 text-end">
          <Anchor href={`/post/page/${index + 2}`}>next →</Anchor>
        </div>
      )
    }
  </div>
</nav>

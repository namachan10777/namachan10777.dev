---
import type { CollectionEntry } from "astro:content";
import Typography from "@components/mdx/typography.astro";
import Anchor from "@components/mdx/anchor.astro";
import remarkParse from "remark-parse";
import remarkGfm from "remark-gfm";
import remarkRetext from "remark-retext";
import { unified } from "unified";
import retextEnglish from "retext-english";
import retextStringify from "retext-stringify";
import retextEquality from "retext-equality";

export interface Props {
  post: CollectionEntry<"post">;
}
const { post } = Astro.props;
/* eslint-disable @typescript-eslint/no-explicit-any */
const vfile = await unified()
  .use(remarkParse)
  .use(remarkGfm)
  .use(remarkRetext, unified().use(retextEnglish).use(retextEquality) as any)
  .use(retextStringify)
  .process(post.body);
const text = vfile.toString();
---

<article>
  <span class="date">{post.data.date.toISOString().slice(0, 10)}</span>
  <h3 class="heading">
    <Anchor href={`/post/${post.slug}`}>{post.data.title}</Anchor>
  </h3>
  <nav class="tags">
    {
      post.data.tags.map((tag) => (
        <Anchor href={`/post/tag/${tag}`}>#{tag}</Anchor>
      ))
    }
  </nav>
  <div class="preview">
    <Typography>
      {text.slice(0, Math.min(120, post.body.length))}...
    </Typography>
  </div>
</article>

<style>
  @layer component {
    .tags {
      font-family: var(--font-mono);
      font-size: var(--font-size-sm);
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
    }

    .date {
      color: var(--fg-weak);
      font-family: var(--font-mono);
      font-size: var(--font-size-sm);
    }

    .heading {
      margin-block-start: 0.25rem;
      margin-block-end: 0.5rem;
      font-size: var(--font-size-lg);
      font-weight: bold;
    }

    .tags-container {
      display: flex;
      flex-wrap: wrap;
      font-family: var(--font-mono);
      font-size: var(--font-size-sm);
      font-weight: bold;
    }

    .preview {
      margin-block-start: 0.5rem;
      color: var(--fg-weak);
    }
  }
</style>

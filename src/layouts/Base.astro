---
import { SEO } from "astro-seo";
import Anchor from "@components/mdx/anchor.astro";
import { Icon } from "astro-icon/components";
import { ViewTransitions } from "astro:transitions";

interface OgArticle {
  type: "article";
  tags?: string[];
  images?: string[];
}

interface OgWebsite {
  type: "website";
}

export type Og = OgArticle | OgWebsite;

export interface PathFragment {
  absolute: string;
  display:
    | string
    | {
        icon: string;
        name: string;
      };
}

export interface Props {
  title: string;
  description: string;
  imagePath: string;
  og: Og;
  path: PathFragment[];
}

function articleJsonLD(article: OgArticle): string {
  return JSON.stringify({
    "@context": "https://schema.org",
    "@type": "Article",
    headline: Astro.props.title,
    image: article.images?.map((path) => `${Astro.site!.origin}${path}`),
    author: [
      {
        "@type": "Person",
        name: "Masaki Nakano",
        url: Astro.site,
      },
    ],
  });
}

function breadcrumbsJsonLD(path: PathFragment[]): string {
  return JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    itemListElement: path.map((fragment, idx) => ({
      "@type": "ListItem",
      position: idx + 1,
      item: {
        "@type": "ListItem",
        "@id": `${Astro.site!.origin}${fragment.absolute}`,
        name:
          typeof fragment.display === "string"
            ? fragment.display
            : fragment.display.name,
      },
    })),
  });
}
---

<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <link rel="icon" href="/favicon.ico" type="image/vnd.microsoft.icon" />
    <SEO
      title={Astro.props.title}
      description={Astro.props.description}
      twitter={{
        card: "summary_large_image",
        creator: "@namachan10777",
        title: Astro.props.title,
        description: Astro.props.description,
        site: "@namachan10777",
        image: `${Astro.site}${Astro.props.imagePath}`,
      }}
      openGraph={{
        basic: {
          title: Astro.props.title,
          type: Astro.props.og.type,
          image: `${Astro.site}${Astro.props.imagePath}`,
        },
        optional: {
          description: Astro.props.description,
          siteName: "www.namachan10777.dev",
        },
        article:
          Astro.props.og.type === "article"
            ? {
                tags: Astro.props.og.tags,
              }
            : undefined,
      }}
    />
    {
      Astro.props.og.type === "article" && (
        <script
          is:inline
          type="application/ld+json"
          set:html={articleJsonLD(Astro.props.og)}
        />
      )
    }
    <script
      is:inline
      type="application/ld+json"
      set:html={breadcrumbsJsonLD(Astro.props.path)}
    />
    <ViewTransitions />
  </head>
  <body data-nav-state="close" class="flex flex-col items-center px-6">
    <div class="px-4 md:w-3/5">
      <div class="h-12 w-full">
        <header
          class="flex h-full flex-row items-center justify-between border-b bg-white"
        >
          <nav>
            {
              Astro.props.path.flatMap((path, idx) => {
                const anchor =
                  typeof path.display === "string" ? (
                    <Anchor href={path.absolute}>{path.display}</Anchor>
                  ) : (
                    <Anchor href={path.absolute} label={path.display.name}>
                      <Icon class="inline-block" name={path.display.icon} />
                    </Anchor>
                  );
                if (idx == 0) {
                  return [anchor];
                } else {
                  return [<span class="mx-2">/</span>, anchor];
                }
              })
            }
          </nav>
        </header>
      </div>
      <main class="min-h-[calc(100dvh-7rem)]">
        <slot />
      </main>
      <div class="h-12 w-full">
        <footer
          class="flex h-full items-center justify-center border-t text-sm text-gray-600"
        >
          Â©2020-2024 Masaki Nakano
        </footer>
      </div>
    </div>
  </body>
</html>

---
import { SEO } from "astro-seo";
import { ViewTransitions } from "astro:transitions";
import Breadcrumbs from "@components/composite/breadcrumbs.astro";

interface OgArticle {
  type: "article";
  tags?: string[];
  images?: string[];
}

interface OgWebsite {
  type: "website";
}

export type Og = OgArticle | OgWebsite;

export interface PathFragment {
  absolute: string;
  display:
    | string
    | {
        icon: string;
        name: string;
      };
}

export interface Props {
  title: string;
  description: string;
  imagePath: string;
  og: Og;
  path: PathFragment[];
}

function articleJsonLD(article: OgArticle): string {
  return JSON.stringify({
    "@context": "https://schema.org",
    "@type": "Article",
    headline: Astro.props.title,
    image: article.images?.map((path) => `${Astro.site!.origin}${path}`),
    author: [
      {
        "@type": "Person",
        name: "Masaki Nakano",
        url: Astro.site,
      },
    ],
  });
}

function breadcrumbsJsonLD(path: PathFragment[]): string {
  return JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    itemListElement: path.map((fragment, idx) => ({
      "@type": "ListItem",
      position: idx + 1,
      item: {
        "@type": "ListItem",
        "@id": `${Astro.site!.origin}${fragment.absolute}`,
        name:
          typeof fragment.display === "string"
            ? fragment.display
            : fragment.display.name,
      },
    })),
  });
}
---

<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <link rel="icon" href="/favicon.ico" type="image/vnd.microsoft.icon" />
    <SEO
      title={Astro.props.title}
      description={Astro.props.description}
      twitter={{
        card: "summary_large_image",
        creator: "@namachan10777",
        title: Astro.props.title,
        description: Astro.props.description,
        site: "@namachan10777",
        image: `${Astro.site}${Astro.props.imagePath}`,
      }}
      openGraph={{
        basic: {
          title: Astro.props.title,
          type: Astro.props.og.type,
          image: `${Astro.site}${Astro.props.imagePath}`,
        },
        optional: {
          description: Astro.props.description,
          siteName: "www.namachan10777.dev",
        },
        article:
          Astro.props.og.type === "article"
            ? {
                tags: Astro.props.og.tags,
              }
            : undefined,
      }}
    />
    {
      Astro.props.og.type === "article" && (
        <script
          is:inline
          type="application/ld+json"
          set:html={articleJsonLD(Astro.props.og)}
        />
      )
    }
    <script
      is:inline
      type="application/ld+json"
      set:html={breadcrumbsJsonLD(Astro.props.path)}
    />
    <ViewTransitions />
  </head>
  <body>
    <div class="body-inner">
      <header>
        <Breadcrumbs path={Astro.props.path} />
      </header>
      <main>
        <slot />
      </main>
      <footer><span>Â©2020-2024 Masaki Nakano</span></footer>
    </div>
    <style>
      @layer reset, component, patch;

      @layer reset {
        /***
          The new CSS reset - version 1.11.2 (last updated 15.11.2023)
          GitHub page: https://github.com/elad2412/the-new-css-reset
        ***/

        /*
          Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
          - The "symbol *" part is to solve Firefox SVG sprite bug
          - The "html" element is excluded, otherwise a bug in Chrome breaks the CSS hyphens property (https://github.com/elad2412/the-new-css-reset/issues/36)
        */
        *:where(
            :not(html, iframe, canvas, img, svg, video, audio):not(
                svg *,
                symbol *
              )
          ) {
          all: unset;
          display: revert;
        }

        /* Preferred box-sizing value */
        *,
        *::before,
        *::after {
          box-sizing: border-box;
        }

        /* Fix mobile Safari increase font-size on landscape mode */
        html {
          -moz-text-size-adjust: none;
          -webkit-text-size-adjust: none;
          text-size-adjust: none;
        }

        /* Reapply the pointer cursor for anchor tags */
        a,
        button {
          cursor: revert;
        }

        /* Remove list styles (bullets/numbers) */
        ol,
        ul,
        menu,
        summary {
          list-style: none;
        }

        /* For images to not be able to exceed their container */
        img {
          max-inline-size: 100%;
          max-block-size: 100%;
        }

        /* removes spacing between cells in tables */
        table {
          border-collapse: collapse;
        }

        /* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
        input,
        textarea {
          -webkit-user-select: auto;
        }

        /* revert the 'white-space' property for textarea elements on Safari */
        textarea {
          white-space: revert;
        }

        /* minimum style to allow to style meter element */
        meter {
          -webkit-appearance: revert;
          appearance: revert;
        }

        /* preformatted text - use only for this feature */
        :where(pre) {
          all: revert;
          box-sizing: border-box;
        }

        /* reset default text opacity of input placeholder */
        ::placeholder {
          color: unset;
        }

        /* fix the feature of 'hidden' attribute.display:revert; revert to element instead of attribute */
        :where([hidden]) {
          display: none;
        }

        /* revert for bug in Chromium browsers
          - fix for the content editable attribute will work properly.
          - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
        :where([contenteditable]:not([contenteditable="false"])) {
          -moz-user-modify: read-write;
          -webkit-user-modify: read-write;
          overflow-wrap: break-word;
          -webkit-line-break: after-white-space;
          -webkit-user-select: auto;
        }

        /* apply back the draggable feature - exist only in Chromium and Safari */
        :where([draggable="true"]) {
          -webkit-user-drag: element;
        }

        /* Revert Modal native behavior */
        :where(dialog:modal) {
          all: revert;
          box-sizing: border-box;
        }

        /* Remove details summary webkit styles */
        ::-webkit-details-marker {
          display: none;
        }
      }

      body {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding-inline: 1.5rem;
      }

      @media screen and (min-width: 640px) {
        .body-inner {
          width: 60%;
        }
      }

      header {
        height: var(--header-height);
        width: 100%;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
        border-bottom: 0.5px solid var(--fg-weak);
      }

      main {
        min-height: calc(100vh - var(--header-height) - var(--footer-height));
      }

      footer {
        height: var(--footer-height);
        width: 100%;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        border-top: 0.5px solid var(--fg-weak);
        font-size: var(--font-size-sm);
        color: var(--fg-weak);
      }

      :root {
        --font-mono: ui-monospace, monospace;
        --bg-code: #ddd;
        --bg-codeblock: #fff;

        --fg-link: #11a129;
        --fg-weak: rgba(0, 0, 0, 0.7);
        --fg-normal: rgba(0, 0, 0.9);
        --fg-strong: rgba(0, 0, 0, 1) --font-size-2xl: 1.5rem;

        --font-size-3xl: 1.875rem;
        --font-size-2xl: 1.5rem;
        --font-size-xl: 1.25rem;
        --font-size-lg: 1.125rem;
        --font-size-base: 1rem;
        --font-size-sm: 0.875rem;

        --header-height: 3rem;
        --footer-height: 3rem;
      }
    </style>
  </body>
</html>

---
import EventBus from "@components/event-bus/event-bus.astro";
import { SEO } from "astro-seo";
import Footer from "./components/footer.astro";
import Header from "./components/header.astro";
import SearchDialog from "./components/search-dialog.tsx";
import Sidebar from "./components/side-pane.astro";
import SiteNav from "./components/site-nav.astro";
import "./markdown.css";

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
const url = Astro.url;
const ogUrl = (() => {
  if (url.pathname === "/") {
    return "/index.webp";
  } else if (url.pathname.endsWith("/")) {
    return `${url.pathname.substring(0, url.pathname.length - 1)}.webp`;
  } else {
    return `${url.pathname}.webp`;
  }
})();
---

<html lang="ja" data-theme="default">
  <head>
    <SEO
      charset="UTF-8"
      twitter={{
        creator: "@namachan10777",
        card: "summary_large_image",
        site: "@namachan10777",
        title,
        image: new URL(ogUrl, Astro.url.origin).toString(),
        imageAlt: title,
        description,
      }}
      openGraph={{
        basic: {
          title: title,
          type: "article",
          image: new URL(ogUrl, Astro.url.origin).toString(),
        },
        image: {
          alt: title,
        },
      }}
    />
    <link rel="icon" type="image/vnd.microsoft.icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={Astro.props.description} />
    <title>{title}</title>
  </head>
  <body class="relative min-h-dvh" data-pagefind-body>
    <EventBus id="main-bus" />
    <div class="sticky top-0 z-10 w-full md:hidden">
      <Header title="namachan10777.dev" />
      <SiteNav />
    </div>
    <SearchDialog client:load />
    <div class="md:grid md:grid-cols-[20rem_1fr]">
      <div class="sticky left-0 top-0 hidden h-dvh md:block">
        <Sidebar />
      </div>
      <div
        id="scrollable-content"
        class="z-0 flex h-full min-h-[calc(100vh_-_3rem)] w-full flex-col justify-between"
      >
        <main>
          <slot />
        </main>
        <Footer />
      </div>
    </div>
    <script>
      import { EventBus } from "@components/event-bus/event-bus-client";

      const siteNav = document.getElementById("site-nav");
      const scrollableContent = document.getElementById("scrollable-content");
      const bus = new EventBus("main-bus");

      if (siteNav && scrollableContent) {
        bus.subscribe("nav-open", () => {
          siteNav.dataset.show = true.toString();
          bus.emit({ type: "background-fix" });
        });

        bus.subscribe("background-fix", () => {
          const scrollHeight = window.scrollY;
          scrollableContent.style.position = "fixed";
          scrollableContent.classList.add("md:left-[10rem]");
          scrollableContent.style.transform = `translateY(-${scrollHeight}px)`;
          scrollableContent.dataset.scroll = scrollHeight.toString();
        });

        bus.subscribe("background-release", () => {
          scrollableContent.style.position = "unset";
          scrollableContent.style.transform = "unset";
          if (scrollableContent.dataset.scroll) {
            const scrollHeight = parseInt(scrollableContent.dataset.scroll, 10);
            window.scroll({ behavior: "instant", top: scrollHeight });
          }
        });

        bus.subscribe("nav-close", () => {
          siteNav.dataset.show = false.toString();
          bus.emit({ type: "background-release" });
        });
      }

      const main = document.querySelector("main");
      if (main) {
        console.log("toggled");
        main.addEventListener("click", () => {
          bus.emit({
            type: "nav-close",
          });
        });
      }
    </script>
  </body>
</html>

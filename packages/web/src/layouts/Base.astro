---
import "./reset.css";
import "./global.css";
import "./katex.css";
import { SEO } from "astro-seo";
import Breadcrumbs from "~/components/composite/BreadCrumbs.astro";
import ThemeSwitcher from "~/components/composite/ThemeSwitcher.astro";
import SearchOn from "~/components/composite/SearchOn.astro";
import SearchDialog from "~/components/composite/SearchDialog.astro";
import { Icon } from "astro-icon/components";

interface OgArticle {
  type: "article";
  tags?: string[];
  images?: string[];
  createdAt: Date;
  modifiedAt?: Date;
}

interface OgWebsite {
  type: "website";
}

export type Og = OgArticle | OgWebsite;

export interface PathFragment {
  absolute: string;
  display: string;
}

export interface Props {
  title: string;
  description: string;
  imagePath: string;
  og: Og;
  path?: PathFragment[];
  ignorePagefind?: boolean;
}

function articleJsonLD(article: OgArticle): string {
  return JSON.stringify({
    "@context": "https://schema.org",
    "@type": "Article",
    headline: Astro.props.title,
    image: article.images?.map((path) => `${Astro.site!.origin}${path}`),
    datePublished: article.createdAt.toISOString(),
    dateModified: article.modifiedAt?.toISOString(),
    author: [
      {
        "@type": "Person",
        name: "Masaki Nakano",
        url: Astro.site,
      },
    ],
  });
}

function breadcrumbsJsonLD(path: PathFragment[]): string {
  return JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    itemListElement: [{ absolute: "/", display: "home" }]
      .concat(path)
      .map((fragment, idx) => ({
        "@type": "ListItem",
        position: idx + 1,
        item: {
          "@type": "ListItem",
          "@id": `${Astro.site!.origin}${fragment.absolute}`,
          name: fragment.display,
        },
      })),
  });
}
---

<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, interactive-widget=overlays-content"
    />
    <meta name="generator" content={Astro.generator} />
    <link rel="stylesheet" href="/layers.css" />
    <link rel="icon" href="/favicon.ico" type="image/vnd.microsoft.icon" />
    <slot name="head" />
    <SEO
      title={Astro.props.title}
      description={Astro.props.description}
      twitter={{
        card: "summary_large_image",
        creator: "@namachan10777",
        title: Astro.props.title,
        description: Astro.props.description,
        site: "@namachan10777",
        image: `${Astro.site}${Astro.props.imagePath}`,
      }}
      openGraph={{
        basic: {
          title: Astro.props.title,
          type: Astro.props.og.type,
          image: `${Astro.site}${Astro.props.imagePath}`,
        },
        optional: {
          description: Astro.props.description,
          siteName: "www.namachan10777.dev",
        },
        article:
          Astro.props.og.type === "article"
            ? {
                tags: Astro.props.og.tags,
              }
            : undefined,
      }}
    />
    {
      Astro.props.og.type === "article" && (
        <script
          is:inline
          type="application/ld+json"
          set:html={articleJsonLD(Astro.props.og)}
        />
      )
    }
    {
      Astro.props.path && (
        <script
          is:inline
          type="application/ld+json"
          set:html={breadcrumbsJsonLD(Astro.props.path)}
        />
      )
    }
  </head>
  <body data-pagefind-ignore={Astro.props.ignorePagefind ? "" : null}>
    <div class="body-inner">
      <header class="site-header">
        <a href="/">
          <Icon name="iconoir:home" class="home-icon" />
        </a>
        <div class="header-toolbox">
          <SearchOn />
          <ThemeSwitcher
            id="theme-switcher"
            initial="light"
            transition:persist
          />
        </div>
      </header>
      <SearchDialog />
      <main>
        {
          Astro.props.path && (
            <nav class="breadcrumbs">
              <Breadcrumbs path={Astro.props.path} />
            </nav>
          )
        }
        <slot />
      </main>
      <footer><span>Â©2020-2024 Masaki Nakano</span></footer>
    </div>
    <style>
      @layer component {
        body {
          display: flex;
          flex-direction: column;
          align-items: center;
          padding-inline: 1.5rem;
          font-family: var(--font-sans-serif);
          position: relative;
          line-height: 1.75;
        }

        @media screen and (width >= 640px) {
          .body-inner {
            width: calc(min(60%, 48rem));
            max-width: 60%;
          }
        }

        .site-header {
          height: var(--header-height);
          width: 100%;
          display: flex;
          flex-direction: row;
          align-items: center;
          position: sticky;
          top: 0;
          justify-content: space-between;
          border-bottom: 0.5px solid var(--fg-hr);
          background-color: var(--bg);
          z-index: 10;
        }

        .home-icon {
          font-size: var(--font-size-2xl);
        }

        main {
          min-height: calc(100vh - var(--header-height) - var(--footer-height));
          padding-block-start: 2rem;
          display: flex;
          flex-direction: column;
          gap: 1rem;
          max-width: calc(100vw - 3rem);
        }

        footer {
          height: var(--footer-height);
          width: 100%;
          display: flex;
          flex-direction: row;
          align-items: center;
          justify-content: center;
          border-top: 0.5px solid var(--fg-hr);
          font-size: var(--font-size-sm);
          color: var(--fg-weak);
        }
      }

      .header-toolbox {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 1rem;
      }
    </style>
    <script>
      const theme = localStorage.getItem("theme") || "dark";
      document.body.dataset.theme = theme;
    </script>
  </body>
</html>

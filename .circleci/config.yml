# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
executors:
  default:
    docker:
      - image: namachan10777/namachan10777.dev:latest

jobs:
  test:
    executor:
      name: default
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-test-{{ checksum "engine/Cargo.lock" }}
      - run:
          name: Test engine
          command: |
            cd engine
            cargo test
            cargo clippy -- -D warnings
            cargo fmt -- --check
      - save_cache:
          key: v2-test-{{ checksum "engine/Cargo.lock" }}
          paths:
            - /usr/local/cargo/registry
            - engine/target

  build_engine:
    executor:
      name: default
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-build-{{ checksum "engine/Cargo.lock" }}
      - run:
          name: Build engine
          command: |
            cd engine
            cargo build --release
      - run:
          name: save
          command: |
            mkdir -p workspace
            cp engine/target/release/engine workspace/engine
      - persist_to_workspace:
          root: workspace
          paths:
            - engine
      - save_cache:
          key: v2-build-{{ checksum "engine/Cargo.lock" }}
          paths:
            - /usr/local/cargo/registry
            - engine/target

  build:
    executor:
      name: default
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Build pages
          command: |
            /tmp/workspace/engine ./public/ public.zip
      - run:
          name: Deploy to netlify
          command: |
            curl -XPOST \
              -H 'Content-Type: application/zip' \
              -H 'Authorization: Bearer '$NETLIFY_TOKEN \
              --data-binary @public.zip \
              https://api.netlify.com/api/v1/sites/namachan10777.netlify.com/deploys

workflows:
  version: 2.1
  test:
    jobs:
      - test
  build_and_deploy:
    jobs:
      - build_engine
      - build:
          requires:
            - build_engine
          filters:
            branches:
              only:
                - master
